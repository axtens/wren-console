// Please do not edit this file. It has been generated automatically
// from `src/module/enforce.wren` using `util/wren_to_c_string.py`

static const char* enforceModuleSource =
"class EnforceError {\n"
"  construct new(message) {\n"
"    _message = message\n"
"  }\n"
"  message { _message }\n"
"  toString { _message }\n"
"  throw() { Fiber.abort(this) }\n"
"}\n"
"\n"
"class Enforce {\n"
"  static error(msg) {\n"
"    var err = EnforceError.new(msg)\n"
"    err.throw()\n"
"  }\n"
"\n"
"  static num(v, name) {\n"
"    if (!(v is Num)) error(\"Expected 'Num' for '%(name)'\")\n"
"  }\n"
"\n"
"  static int(v, name) {\n"
"    if (!(v is Num) || !v.isInteger) error(\"Expected integer for '%(name)'\")\n"
"  }\n"
"\n"
"  static positiveNum(v, name) {\n"
"    if (!(v is Num) || v < 0) error(\"Expected positive integer for '%(name)'\")\n"
"  }\n"
"\n"
"  static positiveInt(v, name) {\n"
"    if (!(v is Num) || !v.isInteger || v < 0) error(\"Expected positive integer for '%(name)'\")\n"
"  }\n"
"\n"
"  static string(v, name) {\n"
"    if (!(v is String)) error(\"Expected 'String' for '%(name)'\")\n"
"  }\n"
"\n"
"  static bool(v, name) {\n"
"    if (!(v is bool)) error(\"Expected 'Bool' for '%(name)'\")\n"
"  }\n"
"\n"
"  static fn(v, arity, name) {\n"
"    if (!(v is Fn) || v.arity != arity) error(\"Expected 'Fn' with %(arity) parameters for '%(name)'\")\n"
"  }\n"
"\n"
"  static type(v, type, name) {\n"
"    if (!(v is type)) error(\"Expected '%(type)' for '%(name)'\")\n"
"  }\n"
"}\n";
