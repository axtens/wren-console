// Please do not edit this file. It has been generated automatically
// from `src/module/resolver.wren` using `util/wren_to_c_string.py`

static const char* resolverModuleSource =
"class Module {\n"
"    construct new(importer, module, home) {\n"
"        _importer = importer\n"
"        _module = module\n"
"        _home = home\n"
"    }\n"
"    static resolve(importer, module, home) {\n"
"        var res = Module.new(importer, module, home)\n"
"        return res.relativeResolver || \n"
"            res.wrenHomeResolver \n"
"    }\n"
"    relativeResolver {\n"
"        if (!_module.startsWith(\"./\")) return _module\n"
"\n"
"        var locations = [\n"
"            Path.join([\"%(_module).wren\"]),\n"
"            Path.join([\"%(_module)/%(_module).wren\"])\n"
"        ]\n"
"        for (x in locations) {\n"
"            System.print(x)\n"
"            if (File.existsSync(x)) return x\n"
"        }        \n"
"    }\n"
"    wrenHomeResolver {\n"
"        var locations = [\n"
"            Path.join([_home,\".wren/lib\",_module + \".wren\"]),\n"
"            Path.join([_home,\".wren\",_module + \".wren\"])\n"
"        ]\n"
"        for (x in locations) {\n"
"            System.print(x)\n"
"            if (File.existsSync(x)) return x\n"
"        }        \n"
"    }\n"
"}\n"
"\n"
"class Path {\n"
"    static join(list) { list.join(\"/\").replace(\"//\",\"/\") }\n"
"}\n"
"\n"
"class File {\n"
"    foreign static existsSync(s)\n"
"}\n"
"\n"
"\n"
"\n";
