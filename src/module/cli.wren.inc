// Please do not edit this file. It has been generated automatically
// from `src/module/cli.wren` using `util/wren_to_c_string.py`

static const char* cliModuleSource =
"import \"repl\" for Repl, AnsiRepl, SimpleRepl\n"
"import \"os\" for Platform, Process\n"
"import \"io\" for Stdin, File, Stdout\n"
"import \"meta\" for Meta\n"
"\n"
"// TODO: Wren needs to expose System.version\n"
"// https://github.com/wren-lang/wren/issues/1016\n"
"class Wren {\n"
"  static VERSION { \"0.4\" }\n"
"}\n"
"\n"
"class CLI {\n"
"  static start() {\n"
"    // TODO: pull out argument processing into it's own class\n"
"    if (Process.allArguments.count >=2) {\n"
"      var flag = Process.allArguments[1]\n"
"      if (flag == \"--version\") {\n"
"        showVersion()\n"
"        return\n"
"      }\n"
"      if (flag == \"--help\") {\n"
"        showHelp()\n"
"        return\n"
"      }\n"
"      if (flag == \"-e\" && Process.allArguments.count >= 3) {\n"
"        var code = Process.allArguments[2]\n"
"        runCode(code,\"<eval>\")\n"
"        return\n"
"      }\n"
"    }\n"
"\n"
"    if (Process.allArguments.count == 1) {\n"
"      repl()\n"
"    } else {\n"
"      runFile(Process.allArguments[1])\n"
"    }\n"
"    Stdout.flush()\n"
"  }\n"
"  static showVersion() {\n"
"    System.print(\"wren v%(Wren.VERSION)\") \n"
"  }\n"
"  static showHelp() {\n"
"    System.print(\"Usage: wren [file] [arguments...]\")\n"
"    System.print(\"\")\n"
"    System.print(\"Optional arguments:\")\n"
"    System.print(\"  --help     Show command line usage\")\n"
"    System.print(\"  --version  Show version\")\n"
"  }\n"
"  static dirForModule(file) {\n"
"    return file.split(\"/\")[0..-2].join(\"/\")\n"
"  }\n"
"  static missingScript(file) {\n"
"    System.print(\"wren_cli: No such file -- %(file)\")\n"
"  }\n"
"  static runCode(code,moduleName) {\n"
"    var fn = Meta.compile(code,moduleName)\n"
"    if (fn != null) {\n"
"      fn.call()\n"
"    } else {\n"
"      // TODO: Process.exit() \n"
"      // https://github.com/wren-lang/wren-cli/pull/74\n"
"      Fiber.abort(\"COMPILE ERROR, should exit 65\")\n"
"    }\n"
"  }\n"
"  static runFile(file) {\n"
"    if (!File.exists(file)) return missingScript(file)\n"
"\n"
"    // TODO: absolute paths, need Path class likely\n"
"    var moduleName = \"./\" + file\n"
"    var code = File.read(file)\n"
"    setRootDirectory_(dirForModule(moduleName))\n"
"    // System.print(moduleName)\n"
"    runCode(code,moduleName)\n"
"  }\n"
"  static repl() {\n"
"    System.print(\"\"\"\\\\/\\\"-\"\"\")\n"
"    System.print(\" \\\\_/    wren v%(Wren.VERSION)\") \n"
"    // \" fix broken VS Code highlighting (not understaning escapes)\n"
"\n"
"    Repl.start()\n"
"  }\n"
"  foreign static setRootDirectory_(dir) \n"
"}\n"
"CLI.start()\n";
